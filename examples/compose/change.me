#####################################
We put it in the HOST_IP shell var like so:
$ HOST_IP=`ip -4 addr show scope global dev docker0 | grep inet | awk '{print \$2}' | cut -d / -f 1`


Then we execute docker run with --add-host, using the variable we set, e.g.:
$ docker run --add-host outside:$HOST_IP --name busybox -it busybox /bin/sh


Now, within the container, we can inspect /etc/hosts, we see an extra line has been added:
bcat@remote:~$ docker run --add-host outside:$HOST_IP --name busybox -it busybox /bin/sh

/ # cat /etc/hosts
127.0.0.1    localhost  
::1    localhost ip6-localhost ip6-loopback
fe00::0    ip6-localnet  
ff00::0    ip6-mcastprefix  
ff02::1    ip6-allnodes  
ff02::2    ip6-allrouters  
172.17.0.1    outside <---- THIS ONE!  
172.17.0.3    a8300156a695  

This mechanism also available docker-compose.yml files as the extra_hosts key, like so:

docker-compose.yml:
version: '2'  
services:  
  samplev2:
    image: "redis:alpine"
    extra_hosts:
       - "outside:172.17.0.1"


And since we took advantage of variable substitution in CLI example, I'll show how we can do the same here:
version: '2'  
services:  
  samplev2:
    image: "redis:alpine"
    extra_hosts:
       - "outside:${HOST_IP}"


In this example, we don't have an .env file, and HOST_IP is only a shell variable. To become an env var, we need export it first, and then run docker-compose:
$ bcat@remote:~$ export HOST_IP=$HOST_IP && docker-compose up -d

#####################################
.env : MACHINE_FQDN=ldap-nfs-01

nginx/nginx.conf : serverhostname

hosts-file/
config.yml        crono.file        portus.init.file
registry/init
secrets/create-crt.sh
docker-compose.yml

docker login  한 후 다운받은 image 만 push 할 수 있음.
docker_credencial 이 없는 상태로 다운받은 기존 images 는 push 할 수 없음.

# SAN 확인
[root@master-01 certs]# openssl req -in pdr-01.csr -noout -text
[root@master-01 certs]# openssl x509 -in ./pdr-01.crt -text -noout
       X509v3 extensions:
            X509v3 Subject Alternative Name:
                DNS:*.example.com, DNS:auth-pdr-01, DNS:pdr-01, IP Address:192.0.220.105

# ubuntu
# CLIENT에 curl 사용시 ssl error 않나게하기 위해 ROOT-CA (pdr-01-CA.crt) 복사 
for i in bootstrap-ldap-nfs-01 pdr-01 master-01 pri-slave-01 pub-slave-01; do ssh $i "rm -rf /etc/pki/ca-trust/source/anchors/*"& done

for i in bootstrap-ldap-nfs-01 pdr-01 master-01 pri-slave-01 pub-slave-01; do ssh $i "ls -l  /etc/pki/ca-trust/source/anchors/*"; done

for i in bootstrap-ldap-nfs-01 pdr-01 master-01 pri-slave-01 pub-slave-01; do ssh $i "update-ca-trust force-enable && update-ca-trust enable && update-ca-trust extract"& done


# centos
for i in bootstrap-ldap-nfs-01 pdr-01 master-01 pri-slave-01 pub-slave-01; do scp pdr-01:/root/Portus/examples/development/compose/portus-CA.crt $i:/etc/pki/ca-trust/source/anchors; done

for i in bootstrap-ldap-nfs-01 pdr-01 master-01 pri-slave-01 pub-slave-01; do ssh $i "ls -l  /etc/pki/ca-trust/source/anchors/*"; done

for i in bootstrap-ldap-nfs-01 pdr-01 master-01 pri-slave-01 pub-slave-01; do ssh $i "update-ca-trust force-enable && update-ca-trust enable && update-ca-trust extract"& done

# UCR (mesos) 내부적으로 사용할 cert 파일 리스트에 root-ca 추가

for i in bootstrap-ldap-nfs-01 pdr-01 master-01 pri-slave-01 pub-slave-01; do cat /etc/pki/ca-trust/source/anchors/portus-CA.crt | ssh $i "cat >> /opt/mesosphere/active/python-requests/lib/python3.5/site-packages/requests/cacert.pem"; done
